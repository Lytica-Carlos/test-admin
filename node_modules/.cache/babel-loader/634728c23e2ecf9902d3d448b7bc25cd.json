{"ast":null,"code":"function authProvider() {\n  fetch('https://staging.vico.ai/analytics/login', {\n    method: 'POST',\n    body: JSON.stringify({\n      'email': 'admin@lytica.ai',\n      'password': 'lyticaca'\n    }),\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }).then(response => {\n    console.log(response);\n\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(response.error);\n    }\n\n    return response.json();\n  }).then(auth => {\n    localStorage.setItem('auth', JSON.stringify(auth));\n  }); // checkAuth: (...params) => {\n  //     return Promise.resolve();\n  // },\n  // getPermissions: () => {\n  //     return Promise.resolve();\n  // }\n}\n\n;\nexport default authProvider;","map":{"version":3,"sources":["/home/roberto/Documents/Lytica/admin-front/test-admin/src/authProvider.js"],"names":["authProvider","fetch","method","body","JSON","stringify","headers","Headers","then","response","console","log","status","Error","error","json","auth","localStorage","setItem"],"mappings":"AAAA,SAASA,YAAT,GAAyB;AAErBC,EAAAA,KAAK,CAAC,yCAAD,EAA4C;AAC7CC,IAAAA,MAAM,EAAE,MADqC;AAE7CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,eAAQ,iBAAT;AAA4B,kBAAW;AAAvC,KAAf,CAFuC;AAG7CC,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAC,sBAAgB;AAAjB,KAAZ;AAHoC,GAA5C,CAAL,CAKCC,IALD,CAKMC,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,QAAIA,QAAQ,CAACG,MAAT,GAAkB,GAAlB,IAAyBH,QAAQ,CAACG,MAAT,IAAmB,GAAhD,EAAqD;AACjD,YAAM,IAAIC,KAAJ,CAAUJ,QAAQ,CAACK,KAAnB,CAAN;AACH;;AACD,WAAOL,QAAQ,CAACM,IAAT,EAAP;AACH,GAXD,EAYCP,IAZD,CAYMQ,IAAI,IAAI;AACVC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6Bd,IAAI,CAACC,SAAL,CAAeW,IAAf,CAA7B;AACH,GAdD,EAFqB,CAkBrB;AACA;AACA;AACA;AACA;AACA;AACH;;AAAA;AAED,eAAehB,YAAf","sourcesContent":["function authProvider () {\n\n    fetch('https://staging.vico.ai/analytics/login', {\n        method: 'POST',\n        body: JSON.stringify({'email':'admin@lytica.ai', 'password':'lyticaca'}),\n        headers: new Headers({'Content-Type': 'application/json'}),\n    })\n    .then(response => {\n        console.log(response)\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response.error)\n        }\n        return response.json();\n    })\n    .then(auth => {\n        localStorage.setItem('auth', JSON.stringify(auth));\n    });\n    \n    // checkAuth: (...params) => {\n    //     return Promise.resolve();\n    // },\n    // getPermissions: () => {\n    //     return Promise.resolve();\n    // }\n};\n\nexport default authProvider;"]},"metadata":{},"sourceType":"module"}