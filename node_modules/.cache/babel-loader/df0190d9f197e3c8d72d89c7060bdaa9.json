{"ast":null,"code":"var _jsxFileName = \"/home/roberto/Documents/Lytica/admin-front/test-admin/src/App.js\";\n// in src/App.js\nimport * as React from \"react\";\nimport { Admin, Resource, ListGuesser, fetchUtils, useDataProvider } from 'react-admin';\nimport lb4Provider from 'react-admin-lb4';\nimport jsonServerProvider from 'ra-data-json-server';\nimport drfProvider from 'ra-data-django-rest-framework';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport StoreList from './posts';\nimport { authProvider } from './authProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst httpClient = (url, options = {}) => {\n  console.log(url);\n\n  if (!options.headers) {\n    options.headers = new Headers({\n      Accept: 'application/json'\n    });\n  }\n\n  const {\n    token\n  } = JSON.parse(localStorage.getItem('auth'));\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = drfProvider('https://staging.vico.ai');\nconsole.log(dataProvider);\n\nconst App = () => ( /*#__PURE__*/_jsxDEV(Admin, {\n  dataProvider: dataProvider,\n  children: /*#__PURE__*/_jsxDEV(Resource, {\n    name: \"admin\",\n    list: StoreList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 5\n}, this), console.log(dataProvider) // dataProvider.getMany('stores', { id: [1] })\n);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/roberto/Documents/Lytica/admin-front/test-admin/src/App.js"],"names":["React","Admin","Resource","ListGuesser","fetchUtils","useDataProvider","lb4Provider","jsonServerProvider","drfProvider","simpleRestProvider","StoreList","authProvider","httpClient","url","options","console","log","headers","Headers","Accept","token","JSON","parse","localStorage","getItem","set","fetchJson","dataProvider","App"],"mappings":";AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,UAAvC,EAAmDC,eAAnD,QAA0E,aAA1E;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AAEA,OAAOC,SAAP,MAAsB,SAAtB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;AAEA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,OAAO,GAAG,EAAhB,KAAuB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AACA,MAAI,CAACC,OAAO,CAACG,OAAb,EAAsB;AAClBH,IAAAA,OAAO,CAACG,OAAR,GAAkB,IAAIC,OAAJ,CAAY;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ,CAAlB;AACH;;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB;AACAV,EAAAA,OAAO,CAACG,OAAR,CAAgBQ,GAAhB,CAAoB,eAApB,EAAsC,UAASL,KAAM,EAArD;AACA,SAAOhB,UAAU,CAACsB,SAAX,CAAqBb,GAArB,EAA0BC,OAA1B,CAAP;AACH,CARD;;AASA,MAAMa,YAAY,GAAGnB,WAAW,CAAC,yBAAD,CAAhC;AACAO,OAAO,CAACC,GAAR,CAAYW,YAAZ;;AACA,MAAMC,GAAG,GAAG,OACR,sBAAC,KAAD;AAAO,EAAA,YAAY,EAAED,YAArB;AAAA,yBACI,QAAC,QAAD;AAAU,IAAA,IAAI,EAAC,OAAf;AAAuB,IAAA,IAAI,EAAEjB;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAGAK,OAAO,CAACC,GAAR,CAAYW,YAAZ,CAJQ,CAKR;AALQ,CAAZ;;KAAMC,G;AASN,eAAeA,GAAf","sourcesContent":["// in src/App.js\nimport * as React from \"react\";\nimport { Admin, Resource, ListGuesser, fetchUtils, useDataProvider } from 'react-admin';\nimport lb4Provider from 'react-admin-lb4';\nimport jsonServerProvider from 'ra-data-json-server';\nimport drfProvider from 'ra-data-django-rest-framework';\nimport simpleRestProvider from 'ra-data-simple-rest';\n\nimport StoreList from './posts';\nimport { authProvider } from './authProvider';\n\nconst httpClient = (url, options = {}) => {\n    console.log(url)\n    if (!options.headers) {\n        options.headers = new Headers({ Accept: 'application/json' });\n    }\n    const { token } = JSON.parse(localStorage.getItem('auth'));\n    options.headers.set('Authorization', `Bearer ${token}`);\n    return fetchUtils.fetchJson(url, options);\n};\nconst dataProvider = drfProvider('https://staging.vico.ai');\nconsole.log(dataProvider)\nconst App = () => (\n    <Admin dataProvider={dataProvider}>\n        <Resource name=\"admin\" list={StoreList}/>\n    </Admin>,\n    console.log(dataProvider)\n    // dataProvider.getMany('stores', { id: [1] })\n);\n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}