{"ast":null,"code":"// in src/App.js\nimport * as React from \"react\";\nimport { Admin, Resource, ListGuesser, fetchUtils } from 'react-admin';\nimport jsonServerProvider from 'ra-data-json-server';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport { PostList } from './posts';\nconst authProvider = {\n  login: ({\n    email,\n    password\n  }) => {\n    const request = new Request('https://staging.vico.ai/analytics/rest-auth/login/', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    });\n    return fetch(request).then(response => {\n      if (response.status < 200 || response.status >= 300) {\n        throw new Error(response.statusText);\n      }\n\n      return response.json();\n    }).then(auth => {\n      localStorage.setItem('auth', JSON.stringify(auth));\n    });\n  },\n  checkAuth: (...params) => {\n    return Promise.resolve();\n  },\n  getPermissions: () => {\n    return Promise.resolve();\n  }\n};\nconst dataProvider = simpleRestProvider('https://staging.vico.ai/analytics', authProvider);\n\nconst App = () => // <Admin dataProvider={dataProvider}>\n//     <Resource name=\"stores\" list={PostList} />\n// </Admin>\ndataProvider.getMany('stores', {\n  id: [1]\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/roberto/Documents/Lytica/admin-front/test-admin/src/App.js"],"names":["React","Admin","Resource","ListGuesser","fetchUtils","jsonServerProvider","simpleRestProvider","PostList","authProvider","login","email","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","status","Error","statusText","json","auth","localStorage","setItem","checkAuth","params","Promise","resolve","getPermissions","dataProvider","App","getMany","id"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,UAAvC,QAAyD,aAAzD;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AAEA,SAASC,QAAT,QAAyB,SAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,KAAuB;AAC1B,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,oDAAZ,EAAkE;AAC9EC,MAAAA,MAAM,EAAE,MADsE;AAE9EC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAAf,CAFwE;AAG9EO,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAC,wBAAgB;AAAjB,OAAZ;AAHqE,KAAlE,CAAhB;AAKA,WAAOC,KAAK,CAACR,OAAD,CAAL,CACFS,IADE,CACGC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,MAAT,GAAkB,GAAlB,IAAyBD,QAAQ,CAACC,MAAT,IAAmB,GAAhD,EAAqD;AACjD,cAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,UAAnB,CAAN;AACH;;AACD,aAAOH,QAAQ,CAACI,IAAT,EAAP;AACH,KANE,EAOFL,IAPE,CAOGM,IAAI,IAAI;AACVC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6Bb,IAAI,CAACC,SAAL,CAAeU,IAAf,CAA7B;AACH,KATE,CAAP;AAUH,GAjBgB;AAkBjBG,EAAAA,SAAS,EAAE,CAAC,GAAGC,MAAJ,KAAe;AACtB,WAAOC,OAAO,CAACC,OAAR,EAAP;AACH,GApBgB;AAqBjBC,EAAAA,cAAc,EAAE,MAAM;AAClB,WAAOF,OAAO,CAACC,OAAR,EAAP;AACH;AAvBgB,CAArB;AA0BA,MAAME,YAAY,GAAG7B,kBAAkB,CAAC,mCAAD,EAAsCE,YAAtC,CAAvC;;AACA,MAAM4B,GAAG,GAAG,MACR;AACA;AACA;AACAD,YAAY,CAACE,OAAb,CAAqB,QAArB,EAA+B;AAAEC,EAAAA,EAAE,EAAE,CAAC,CAAD;AAAN,CAA/B,CAJJ;;KAAMF,G;AAQN,eAAeA,GAAf","sourcesContent":["// in src/App.js\nimport * as React from \"react\";\nimport { Admin, Resource, ListGuesser, fetchUtils } from 'react-admin';\nimport jsonServerProvider from 'ra-data-json-server';\nimport simpleRestProvider from 'ra-data-simple-rest';\n\nimport { PostList } from './posts';\n\nconst authProvider = {\n    login: ({email, password}) => {\n        const request = new Request('https://staging.vico.ai/analytics/rest-auth/login/', {\n            method: 'POST',\n            body: JSON.stringify({email, password}),\n            headers: new Headers({'Content-Type': 'application/json'}),\n        });\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(auth => {\n                localStorage.setItem('auth', JSON.stringify(auth));\n            });\n    },\n    checkAuth: (...params) => {\n        return Promise.resolve();\n    },\n    getPermissions: () => {\n        return Promise.resolve();\n    }\n};\n\nconst dataProvider = simpleRestProvider('https://staging.vico.ai/analytics', authProvider);\nconst App = () => (\n    // <Admin dataProvider={dataProvider}>\n    //     <Resource name=\"stores\" list={PostList} />\n    // </Admin>\n    dataProvider.getMany('stores', { id: [1] })\n);\n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}