{"ast":null,"code":"var _jsxFileName = \"/home/roberto/Documents/Personal/test-admin/src/StoreProvider.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { withDataProvider, useDataProvider, Loading, Error } from 'react-admin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst storeDta = ({\n  storeId\n}) => {\n  _s();\n\n  const dataProvider = useDataProvider();\n  const [store, setStore] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    dataProvider.getOne('stores', {\n      id: storeId\n    }).then(({\n      data\n    }) => {\n      setStore(data);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (!user) return null;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Name: \", store.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Id: \", store.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(storeDta, \"HPDqm9gtlppX8bgJwvOA7qzb4d0=\", false, function () {\n  return [useDataProvider];\n});\n\nexport default storeDta;","map":{"version":3,"sources":["/home/roberto/Documents/Personal/test-admin/src/StoreProvider.js"],"names":["React","useState","useEffect","withDataProvider","useDataProvider","Loading","Error","storeDta","storeId","dataProvider","store","setStore","loading","setLoading","error","setError","getOne","id","then","data","catch","user","name"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,gBAAT,EAA2BC,eAA3B,EAA4CC,OAA5C,EAAqDC,KAArD,QAAkE,aAAlE;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC9B,QAAMC,YAAY,GAAGL,eAAe,EAApC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,YAAY,CAACO,MAAb,CAAoB,QAApB,EAA8B;AAAEC,MAAAA,EAAE,EAAET;AAAN,KAA9B,EACKU,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAChBR,MAAAA,QAAQ,CAACQ,IAAD,CAAR;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJL,EAKKO,KALL,CAKWN,KAAK,IAAI;AACZC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KARL;AASH,GAVQ,EAUN,EAVM,CAAT;AAYA,MAAID,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIE,KAAJ,EAAW,oBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,MAAI,CAACO,IAAL,EAAW,OAAO,IAAP;AAEX,sBACI;AAAA,4BACI;AAAA,2BAAWX,KAAK,CAACY,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,yBAASZ,KAAK,CAACO,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA3BD;;GAAMV,Q;UACmBH,e;;;AA4BzB,eAAeG,QAAf","sourcesContent":["import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { withDataProvider, useDataProvider, Loading, Error } from 'react-admin';\n\nconst storeDta = ({ storeId }) => {\n    const dataProvider = useDataProvider();\n    const [store, setStore] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n    useEffect(() => {\n        dataProvider.getOne('stores', { id: storeId })\n            .then(({ data }) => {\n                setStore(data);\n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n\n    if (loading) return <Loading />;\n    if (error) return <Error />;\n    if (!user) return null;\n\n    return (\n        <ul>\n            <li>Name: {store.name}</li>\n            <li>Id: {store.id}</li>\n        </ul>\n    )\n};\n\nexport default storeDta;\n"]},"metadata":{},"sourceType":"module"}