{"ast":null,"code":"function authProvider() {\n  fetch('http://localhost:8000/rest-auth/login/', {\n    method: 'POST',\n    body: JSON.stringify('juan.ram@gmail.com', '12345678abc'),\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }).then(response => {\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(response.statusText);\n    }\n\n    return response.json();\n  }).then(auth => {\n    localStorage.setItem('auth', JSON.stringify(auth));\n  }); // checkAuth: (...params) => {\n  //     return Promise.resolve();\n  // },\n  // getPermissions: () => {\n  //     return Promise.resolve();\n  // }\n}\n\n;\nexport default authProvider;","map":{"version":3,"sources":["/home/roberto/Documents/Lytica/admin-front/test-admin/src/authProvider.js"],"names":["authProvider","fetch","method","body","JSON","stringify","headers","Headers","then","response","status","Error","statusText","json","auth","localStorage","setItem"],"mappings":"AAAA,SAASA,YAAT,GAAyB;AAErBC,EAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC5CC,IAAAA,MAAM,EAAE,MADoC;AAE5CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,oBAAf,EAAqC,aAArC,CAFsC;AAG5CC,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAC,sBAAgB;AAAjB,KAAZ;AAHmC,GAA3C,CAAL,CAMKC,IANL,CAMUC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,MAAT,GAAkB,GAAlB,IAAyBD,QAAQ,CAACC,MAAT,IAAmB,GAAhD,EAAqD;AACjD,YAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,UAAnB,CAAN;AACH;;AACD,WAAOH,QAAQ,CAACI,IAAT,EAAP;AACH,GAXL,EAYKL,IAZL,CAYUM,IAAI,IAAI;AACVC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BZ,IAAI,CAACC,SAAL,CAAeS,IAAf,CAA7B;AACH,GAdL,EAFqB,CAkBrB;AACA;AACA;AACA;AACA;AACA;AACH;;AAAA;AAED,eAAed,YAAf","sourcesContent":["function authProvider () {\n\n    fetch('http://localhost:8000/rest-auth/login/', {\n        method: 'POST',\n        body: JSON.stringify('juan.ram@gmail.com', '12345678abc'),\n        headers: new Headers({'Content-Type': 'application/json'}),\n    })\n\n        .then(response => {\n            if (response.status < 200 || response.status >= 300) {\n                throw new Error(response.statusText);\n            }\n            return response.json();\n        })\n        .then(auth => {\n            localStorage.setItem('auth', JSON.stringify(auth));\n        });\n    \n    // checkAuth: (...params) => {\n    //     return Promise.resolve();\n    // },\n    // getPermissions: () => {\n    //     return Promise.resolve();\n    // }\n};\n\nexport default authProvider;"]},"metadata":{},"sourceType":"module"}