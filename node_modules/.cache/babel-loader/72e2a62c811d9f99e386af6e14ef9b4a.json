{"ast":null,"code":"var _jsxFileName = \"/home/roberto/Documents/Lytica/admin-front/test-admin/src/App.js\",\n    _s = $RefreshSig$();\n\n// in src/App.js\nimport * as React from \"react\";\nimport { Admin, Resource, ListGuesser, fetchUtils } from 'react-admin';\nimport jsonServerProvider from 'ra-data-json-server';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport { PostList } from './posts';\nimport authProvider from './authProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({\n      Accept: 'application/json'\n    });\n  }\n\n  const {\n    token\n  } = JSON.parse(localStorage.getItem('auth'));\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nc;\nconst dataProvider = simpleRestProvider('https://staging.vico.ai/analytics', httpClient);\n\nconst App = () => {\n  _s();\n\n  const [dataProvider, setDataProvider] = useState(null);\n  useEffect(() => {\n    const buildDataProvider = async () => {\n      const dataProvider = await buildHasuraProvider({\n        clientOptions: {\n          uri: \"https://foo.com/v1/graphql\",\n          headers: {\n            \"x-hasura-admin-secret\": \"foo\"\n          }\n        }\n      });\n      setDataProvider(() => dataProvider);\n    };\n\n    buildDataProvider();\n  }, []);\n  if (!dataProvider) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Admin, {\n    dataProvider: dataProvider,\n    authProvider: authProvider,\n    children: /*#__PURE__*/_jsxDEV(Resource, {\n      name: \"stores\",\n      list: PostList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"dSVlVWCkGGbjtaM9Xj26pQ2YJmA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/roberto/Documents/Lytica/admin-front/test-admin/src/App.js"],"names":["React","Admin","Resource","ListGuesser","fetchUtils","jsonServerProvider","simpleRestProvider","PostList","authProvider","httpClient","url","options","headers","Headers","Accept","token","JSON","parse","localStorage","getItem","set","fetchJson","c","dataProvider","App","setDataProvider","useState","useEffect","buildDataProvider","buildHasuraProvider","clientOptions","uri"],"mappings":";;;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,UAAvC,QAAyD,aAAzD;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AAEA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAGA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,OAAO,GAAG,EAAhB,KAAuB;AACtC,MAAI,CAACA,OAAO,CAACC,OAAb,EAAsB;AAClBD,IAAAA,OAAO,CAACC,OAAR,GAAkB,IAAIC,OAAJ,CAAY;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ,CAAlB;AACH;;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB;AACAR,EAAAA,OAAO,CAACC,OAAR,CAAgBQ,GAAhB,CAAoB,eAApB,EAAsC,UAASL,KAAM,EAArD;AACA,SAAOX,UAAU,CAACiB,SAAX,CAAqBX,GAArB,EAA0BC,OAA1B,CAAP;AACH,CAPD;;AAQAW,CAAC;AAED,MAAMC,YAAY,GAAGjB,kBAAkB,CAAC,mCAAD,EAAsCG,UAAtC,CAAvC;;AACA,MAAMe,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACD,YAAD,EAAeE,eAAf,IAAkCC,QAAQ,CAAC,IAAD,CAAhD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMC,iBAAiB,GAAG,YAAY;AAClC,YAAML,YAAY,GAAG,MAAMM,mBAAmB,CAAC;AAC3CC,QAAAA,aAAa,EAAE;AACXC,UAAAA,GAAG,EAAE,4BADM;AAEXnB,UAAAA,OAAO,EAAE;AACL,qCAAyB;AADpB;AAFE;AAD4B,OAAD,CAA9C;AAQAa,MAAAA,eAAe,CAAC,MAAMF,YAAP,CAAf;AACH,KAVD;;AAWAK,IAAAA,iBAAiB;AACpB,GAbQ,EAaN,EAbM,CAAT;AAeA,MAAI,CAACL,YAAL,EAAmB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACnB,sBACI,QAAC,KAAD;AAAO,IAAA,YAAY,EAAEA,YAArB;AAAmC,IAAA,YAAY,EAAEf,YAAjD;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAC,QAAf;AAAwB,MAAA,IAAI,EAAED;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBD;;GAAMiB,G;;KAAAA,G;AAyBN,eAAeA,GAAf","sourcesContent":["// in src/App.js\nimport * as React from \"react\";\nimport { Admin, Resource, ListGuesser, fetchUtils } from 'react-admin';\nimport jsonServerProvider from 'ra-data-json-server';\nimport simpleRestProvider from 'ra-data-simple-rest';\n\nimport { PostList } from './posts';\nimport authProvider from './authProvider';\n\n\nconst httpClient = (url, options = {}) => {\n    if (!options.headers) {\n        options.headers = new Headers({ Accept: 'application/json' });\n    }\n    const { token } = JSON.parse(localStorage.getItem('auth'));\n    options.headers.set('Authorization', `Bearer ${token}`);\n    return fetchUtils.fetchJson(url, options);\n};\nc\n\nconst dataProvider = simpleRestProvider('https://staging.vico.ai/analytics', httpClient);\nconst App = () => {\n    const [dataProvider, setDataProvider] = useState(null);\n    useEffect(() => {\n        const buildDataProvider = async () => {\n            const dataProvider = await buildHasuraProvider({\n                clientOptions: {\n                    uri: \"https://foo.com/v1/graphql\",\n                    headers: {\n                        \"x-hasura-admin-secret\": \"foo\",\n                    },\n                },\n            });\n            setDataProvider(() => dataProvider);\n        };\n        buildDataProvider();\n    }, []);\n\n    if (!dataProvider) return <p>Loading...</p>;\n    return (\n        <Admin dataProvider={dataProvider} authProvider={authProvider}>\n            <Resource name=\"stores\" list={PostList} />\n        </Admin>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}