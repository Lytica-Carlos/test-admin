{"ast":null,"code":"var _jsxFileName = \"/home/roberto/Documents/Personal/test-admin/src/StoreProvider.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\nimport drfProvider from 'ra-data-django-rest-framework';\nimport { List, Datagrid, TextField, DateField, EmailField, SearchInput, Filter, fetchUtils } from 'react-admin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst httpClient = (url, options = {}) => {\n  console.log(url);\n\n  if (!options.headers) {\n    options.headers = new Headers({\n      Accept: 'application/json'\n    });\n  }\n\n  const {\n    token\n  } = JSON.parse(localStorage.getItem('auth'));\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = drfProvider('https://staging.vico.ai/analytics', httpClient);\n\nconst storeProvider = ({\n  userId,\n  props\n}) => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQueryWithStore({\n    type: 'getMany',\n    resource: 'stores',\n    payload: {\n      id: userId\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(List, { ...props,\n    children: /*#__PURE__*/_jsxDEV(Datagrid, {\n      rowClick: \"edit\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        source: \"id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        source: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        source: \"assigned\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        source: \"categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        source: \"schedules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        source: \"time_zone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        source: \"identifier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(storeProvider, \"MXhE7XPvIznvLoZ6rjfn+ZW/8tQ=\", false, function () {\n  return [useQueryWithStore];\n});\n\nexport default storeProvider;","map":{"version":3,"sources":["/home/roberto/Documents/Personal/test-admin/src/StoreProvider.js"],"names":["React","useQueryWithStore","Loading","Error","drfProvider","List","Datagrid","TextField","DateField","EmailField","SearchInput","Filter","fetchUtils","httpClient","url","options","console","log","headers","Headers","Accept","token","JSON","parse","localStorage","getItem","set","fetchJson","dataProvider","storeProvider","userId","props","data","loading","error","type","resource","payload","id"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT,EAA4BC,OAA5B,EAAqCC,KAArC,QAAkD,aAAlD;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,SAApC,EAA+CC,UAA/C,EAA2DC,WAA3D,EAAwEC,MAAxE,EAA+EC,UAA/E,QAAiG,aAAjG;;;AAGA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,OAAO,GAAG,EAAhB,KAAuB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AACA,MAAI,CAACC,OAAO,CAACG,OAAb,EAAsB;AAClBH,IAAAA,OAAO,CAACG,OAAR,GAAkB,IAAIC,OAAJ,CAAY;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ,CAAlB;AACH;;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB;AACAV,EAAAA,OAAO,CAACG,OAAR,CAAgBQ,GAAhB,CAAoB,eAApB,EAAsC,UAASL,KAAM,EAArD;AACA,SAAOT,UAAU,CAACe,SAAX,CAAqBb,GAArB,EAA0BC,OAA1B,CAAP;AACH,CARD;;AASA,MAAMa,YAAY,GAAGxB,WAAW,CAAC,mCAAD,EAAsCS,UAAtC,CAAhC;;AACA,MAAMgB,aAAa,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAuB;AAAA;;AACzC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BjC,iBAAiB,CAAC;AAC/CkC,IAAAA,IAAI,EAAE,SADyC;AAE/CC,IAAAA,QAAQ,EAAE,QAFqC;AAG/CC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,EAAE,EAAER;AAAN;AAHsC,GAAD,CAAlD;AAKA,sBACI,QAAC,IAAD,OAAUC,KAAV;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAC,MAAnB;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,MAAM,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,MAAM,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,SAAD;AAAW,QAAA,MAAM,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,SAAD;AAAW,QAAA,MAAM,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,SAAD;AAAW,QAAA,MAAM,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,SAAD;AAAW,QAAA,MAAM,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,SAAD;AAAW,QAAA,MAAM,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAnBD;;GAAMF,a;UAC+B5B,iB;;;AAqBrC,eAAe4B,aAAf","sourcesContent":["import * as React from \"react\";\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\nimport drfProvider from 'ra-data-django-rest-framework';\nimport { List, Datagrid, TextField, DateField, EmailField, SearchInput, Filter,fetchUtils } from 'react-admin';\n\n\nconst httpClient = (url, options = {}) => {\n    console.log(url)\n    if (!options.headers) {\n        options.headers = new Headers({ Accept: 'application/json' });\n    }\n    const { token } = JSON.parse(localStorage.getItem('auth'));\n    options.headers.set('Authorization', `Bearer ${token}`);\n    return fetchUtils.fetchJson(url, options);\n};\nconst dataProvider = drfProvider('https://staging.vico.ai/analytics', httpClient);\nconst storeProvider = ({ userId, props }) => {\n    const { data, loading, error } = useQueryWithStore({ \n        type: 'getMany',\n        resource: 'stores',\n        payload: { id: userId }\n    });\n    return (\n        <List {...props}>\n            <Datagrid rowClick=\"edit\">\n                <TextField source=\"id\" />\n                <TextField source=\"name\" />\n                <TextField source=\"assigned\" />\n                <TextField source=\"categories\" />\n                <TextField source=\"schedules\" />\n                <TextField source=\"time_zone\" />\n                <TextField source=\"identifier\" />\n            </Datagrid>\n        </List>\n    );\n};\n\n\nexport default storeProvider;"]},"metadata":{},"sourceType":"module"}